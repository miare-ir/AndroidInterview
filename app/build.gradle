plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "io.gitlab.arturbosch.detekt" version "1.0.0.M11"
    id "org.jlleitschuh.gradle.ktlint" version "9.3.0"
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "ir.alilo.interview"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

// variable that can be referenced to keep support libs consistent
def dbflow_version = '4.2.4'
def anko_version = '0.10.5'
def gms_version = '11.0.2'
def dagger_version = '2.24'
def retrofit_version = '2.5.0'
def robolectric_version = '4.3'
def slf4j_version = '1.7.25'
def glide_version = '4.11.0'

dependencies {
    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"
    // [Kotlin stdlib/reflect](https://kotlinlang.org/api/latest/jvm/stdlib/)
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // [Anko](https://github.com/Kotlin/anko)
    implementation "org.jetbrains.anko:anko-common:$anko_version"

    // [Material Design](https://material.io/develop/android)
    implementation 'com.google.android.material:material:1.2.1'

    // [Dagger 2](https://google.github.io/dagger/)
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kaptTest "com.google.dagger:dagger-compiler:$dagger_version"
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    // [ConstraintLayout](https://androidstudio.googleblog.com/)
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'

    // [Google Play services location APIs](https://developers.google.com/android/reference/com/google/android/gms/location/package-summary)
    //noinspection GradleDependency // Fixed GMS version for old play services users
    implementation "com.google.android.gms:play-services-location:${gms_version}"
    //noinspection GradleDependency // Fixed GMS version for old play services users
    implementation "com.google.android.gms:play-services-gcm:${gms_version}"
    //noinspection GradleDependency // Fixed GMS version for old play services users
    implementation "com.google.android.gms:play-services-auth:${gms_version}"

    // [Firebase](https://firebase.google.com/docs/)
    implementation "com.google.firebase:firebase-messaging:${gms_version}"
    implementation "com.google.firebase:firebase-core:${gms_version}"

    // [Jackson (jackson-module-kotlin)](https://github.com/FasterXML/jackson-module-kotlin)
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.6"

    // [Jackson (jackson-datatype-joda](https://github.com/FasterXML/jackson-datatype-joda)
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.9.6'

    // [Jackson (jackson-datatype-json-org)](https://github.com/FasterXML/jackson-datatype-json-org)
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-json-org:2.9.9') {
        exclude group: 'org.json', module: 'json'
    }

    // [Retrofit](https://square.github.io/retrofit/)
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-jackson:$retrofit_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'

    // [DBFlow](https://github.com/Raizlabs/DBFlow)
    kapt "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflow_version}"
    implementation "com.github.Raizlabs.DBFlow:dbflow-core:${dbflow_version}"
    implementation "com.github.Raizlabs.DBFlow:dbflow:${dbflow_version}"
    implementation "com.github.Raizlabs.DBFlow:dbflow-kotlinextensions:${dbflow_version}"

    // [sentry-android](https://docs.sentry.io/clients/java/modules/android/)
    implementation 'io.sentry:sentry-android:1.7.5'

    // [Timber](https://github.com/JakeWharton/timber)
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // [Joda-Time](https://github.com/JodaOrg/joda-time)
    implementation 'joda-time:joda-time:2.10'

    // [Glide](https://github.com/bumptech/glide)
    implementation "com.github.bumptech.glide:glide:${glide_version}"
    kapt "com.github.bumptech.glide:compiler:${glide_version}"

    // [JalaliCalendar](https://github.com/razeghi71/JalaliCalendar)
    implementation 'ir.huri:JalaliCalendar:1.3.3'

    // [BottomNavigationViewEx](https://github.com/ittianyu/BottomNavigationViewEx)
    implementation 'com.github.ittianyu:BottomNavigationViewEx:2.0.4'

    // [AVLoadingIndicatorView](https://github.com/81813780/AVLoadingIndicatorView)
    implementation 'com.wang.avi:library:2.1.3'

    // [MaterialProgressBar](https://github.com/zhanghai/MaterialProgressBar)
    implementation 'me.zhanghai.android.materialprogressbar:library:1.6.1'

    // [Android View Animations](https://github.com/daimajia/AndroidViewAnimations)
    implementation 'com.daimajia.easing:library:2.1@aar'
    implementation 'com.daimajia.androidanimations:library:2.3@aar'

    // [SwitchButton](https://github.com/kyleduo/SwitchButton)
    implementation 'com.kyleduo.switchbutton:library:2.0.0'

    // [True Time](https://github.com/instacart/truetime-android)
    implementation 'com.github.instacart.truetime-android:library:3.4'

    // [SLF4J](https://www.slf4j.org/)
    implementation "org.slf4j:slf4j-api:${slf4j_version}"
    implementation 'com.github.tony19:logback-android:2.0.0'

    // [Zip4j](https://github.com/srikanth-lingala/zip4j)
    implementation 'net.lingala.zip4j:zip4j:2.2.7'

    // [AWS SDK for Android](https://github.com/aws-amplify/aws-sdk-android)
    implementation 'com.amazonaws:aws-android-sdk-s3:2.16.5'
    implementation 'com.amazonaws:aws-android-sdk-cognito:2.16.5'

    // [SmartTabLayout](https://github.com/ogaclejapan/SmartTabLayout)
    implementation 'com.ogaclejapan.smarttablayout:library:2.0.0@aar'
    implementation 'com.ogaclejapan.smarttablayout:utils-v4:2.0.0@aar'

    // [ExoPlayer](https://github.com/google/ExoPlayer)
    implementation 'com.google.android.exoplayer:exoplayer:2.11.7'

    // [AndroidX test setup](https://developer.android.com/training/testing/set-up-project)
    testImplementation 'androidx.test:core:1.3.0'

    // [JUnit](http://junit.org/junit4/)
    testImplementation 'junit:junit:4.13.1'

    // [Kluent](https://github.com/MarkusAmshove/Kluent)
    testImplementation 'org.amshove.kluent:kluent:1.38'

    // [Mockito-Kotlin](https://github.com/nhaarman/mockito-kotlin)
    testImplementation 'com.nhaarman:mockito-kotlin:1.5.0'

    // [Robolectric](http://robolectric.org/'
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "org.robolectric:shadows-multidex:$robolectric_version"

    // [JUnit Rules] (https://developer.android.com/training/testing/packages)
    androidTestImplementation('androidx.test:rules:1.3.0') {
        exclude module: 'support-annotations'
    }

    // [Espresso](https://developer.android.com/training/testing/espresso/index.html)
    androidTestImplementation('androidx.test.espresso:espresso-core:3.3.0') {
        exclude module: 'support-annotations'
    }
}
